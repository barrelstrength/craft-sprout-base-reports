{% requirePermission viewReportsPermission %}

{% extends "_layouts/cp" %}
{% import 'sprout-base/_includes/sproutcp' as sprout %}

{% set title  = report.name %}
{% set bodyClass = 'sprout-reports-content' %}
{% set selectedSubnavItem = craft.app.request.getSegment(2) %}
{% if dataSource is defined %}
    {% set settingsHtml = dataSource.getSettingsHtml() %}
{% endif %}

{% set crumbs = [
    { label: 'Reports'|t('sprout-base-reports'), url: reportIndexUrl }
] %}

{% if currentUser.can(editReportsPermission) %}
    {% set crumbs = crumbs|merge([{
        label: "Edit "|t('sprout-base-reports') ~ report.name,
        url: report.getCpEditUrl(dataSourceBaseUrl, pluginHandle)
    }]) %}
{% endif %}

{% block actionButton %}

    <form method="post" accept-charset="UTF-8">
        {{ csrfInput() }}
        <input type="hidden" name="action" value="sprout-base-reports/reports/export-report">
        <input type="hidden" name="reportId" value="{{ report.id }}">
        <input type="hidden" name="pluginHandle" value="{{ pluginHandle }}">

        <button id="btn-download-csv" class="btn" type="submit">
            {{ "Export"|t('sprout-base-reports') }}
        </button>
    </form>

    {% if currentUser.can(editReportsPermission) %}
        <a id="modify-settings-icon" class="btn" data-icon="settings"></a>
    {% endif %}

{% endblock %}

{% block content %}

    {% if settingsHtml %}

        <div id="modify-settings-panel" style="display:none;">

            <form id="report-settings" method="post" accept-charset="UTF-8">
                {{ csrfInput() }}
                {{ redirectInput(redirectUrl) }}
                <input type="hidden" name="action"
                    value="sprout-base-reports/reports/update-report">
                <input type="hidden" name="reportId" value="{{ report.id }}">
                <input type="hidden" name="pluginHandle" value="{{ pluginHandle }}">
                <input type="hidden" name="viewContext" value="{{ viewContext }}">

                {{ settingsHtml | raw }}

                <div class="button">
                    <div class="btngroup">
                        <input type="submit" class="btn submit"
                            value="{{ 'Run report'|t('sprout-base-reports') }}">
                    </div>
                </div>

            </form>

            <hr>

        </div>

    {% endif %}

    <div class="tableview sproutreports">
        {% if values is defined and values is iterable and values|length %}
            <div class="tablecontent">
                <table id="sprout-results" class="data fullwidth nowrap" style="opacity:0;">
                    <thead>
                    <tr>
                        {% for label in labels %}
                            <th>
                                <div {% if loop.index == "1" %}class="first"{% endif %}>
                                    <h3>{{ label }}</h3></div>
                            </th>
                        {% endfor %}
                    </tr>
                    </thead>
                    <tbody>
                    {% for value in values %}
                        <tr>
                            {% for property in value %}
                                <td>
                                    {%- if report.allowHtml -%}
                                        {{- property|raw|nl2br -}}
                                    {%- else -%}
                                        {{- property -}}
                                    {%- endif -%}
                                </td>
                            {% endfor %}
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>

        {% else %}

            {% set boxBody %}
                <p>{{ "This segment currently has no results. Check your segment settings and ensure you have content for the segment you are trying to run. To quickly edit the segment settings, click on the gear icon in the upper right."|t('sprout-base-reports')|raw }}</p>
            {% endset %}

            {{ sprout.mediaBox({
                heading: "No results found"|t('sprout-base-reports'),
                body: boxBody,
                resourcePath: '@sproutbasereports/web/assets/reports/dist/images/icon.svg'
            }) }}

        {% endif %}
    </div>

{% endblock %}

{% do view.registerAssetBundle("barrelstrength\\sproutbase\\web\\assets\\cp\\CpAsset") %}
{% do view.registerAssetBundle("barrelstrength\\sproutbasereports\\web\\assets\\reports\\SproutReportsAsset") %}
{% do view.registerAssetBundle("barrelstrength\\sproutbasereports\\web\\assets\\datatables\\DataTablesAsset") %}

{% js on ready %}

    new SproutReportsDataTables({
    allowHtml: {{ report.allowHtml ? 'true' : 'false' }},
    defaultPageLength: {{ settings.defaultPageLength ?? '10' }},
    sortOrder: '{{ report.sortOrder }}',
    sortColumnPosition: '{{ sortColumnPosition }}'
    });

    new ReportSettingsToggleButton();

{% endjs %}


{% js at head %}

let script = document.createElement('script');
script.src = 'https://cdn.jsdelivr.net/npm/apexcharts';
document.head.append(script);
{% endjs %}

{% js on ready %}





    var title = 'title';
    var reportLabels = [];

    {% set labelColumn = 'title' %}
    {% set dataColumn = 'id' %}


    var labelColumn = '{{labelColumn}}';
    var dataColumn = '{{dataColumn}}';
    var labels = {{labels|json_encode()|raw}}
    var data = {{values|json_encode()|raw}}

    var labelIndex = labels.indexOf(labelColumn);
    var dataIndex = labels.indexOf(dataColumn);

    console.log(`${labelIndex} - ${dataIndex}`);
    console.log()

    var labelSeries = data.map(item => item[labelIndex]);
    var dataSeries = data.map(item => Number(item[dataIndex]));

    console.log('visualizations');

    console.log(labelSeries);
    console.log(dataSeries);

    //var series = {{values|map(item => item.2.handle)|json_encode()|raw}}
    //series = [1,2];
    //console.log(series);

    {% set seriesData = [40, 80] %}

    setTimeout(function(){

        var options = {
        series: dataSeries,
        chart: {
        width: 380,
        type: 'pie',
      },
      title: {
        text: 'Product Trends by Month',
        align: 'left'
      },
      labels: labelSeries,
      responsive: [{
        breakpoint: 480,
        options: {
          chart: {
            width: 200
          },
          legend: {
            position: 'bottom'
          }
        }
      }]
      };

      var chart3 = new ApexCharts(document.querySelector("#chart"), options);
      chart3.render();
    },2000);





{% endjs %}
