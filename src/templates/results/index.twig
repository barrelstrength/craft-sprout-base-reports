{% requirePermission viewReportsPermission %}

{% extends "_layouts/cp" %}
{% import 'sprout-base/_includes/sproutcp' as sprout %}

{% set title  = report.name %}
{% set bodyClass = 'sprout-reports-content' %}
{% set selectedSubnavItem = craft.app.request.getSegment(2) %}
{% if dataSource is defined %}
    {% set settingsHtml = dataSource.getSettingsHtml() %}
{% endif %}

{% set crumbs = [
    { label: labelTextPlural, url: reportIndexUrl }
] %}

{% if currentUser.can(editReportsPermission) %}
    {% set crumbs = crumbs|merge([{
        label: "Edit "|t('sprout-base-reports') ~ report.name,
        url: report.getCpEditUrl(baseDataSourceUrl, permissionContext)
    }]) %}
{% endif %}

{% block actionButton %}
    <form method="post" accept-charset="UTF-8">
        {{ csrfInput() }}
        <input type="hidden" name="action"
            value="sprout-base-reports/reports/export-report">
        <input type="hidden" name="reportId" value="{{ report.id }}">

        <a id="btn-download-csv" class="btn">
            {{ "Export"|t('sprout-base-reports') }}
        </a>

        {% if currentUser.can(editReportsPermission) %}
            <a id="modify-settings-icon" class="btn" data-icon="settings"></a>
        {% endif %}
    </form>
{% endblock %}

{% set runReportText = viewContext == 'segments'
    ? "View Segment"|t('sprout-base-reports')
    : "Run Report"|t('sprout-base-reports')
%}

{% block content %}

    {% if settingsHtml %}

        <div id="modify-settings-panel" style="display:none;">

            <form id="report-settings" method="post" accept-charset="UTF-8">
                {{ csrfInput() }}
                {{ redirectInput(redirectUrl) }}
                <input type="hidden" name="action"
                    value="sprout-base-reports/reports/update-report">
                <input type="hidden" name="reportId" value="{{ report.id }}">

                {{ settingsHtml | raw }}

                <div class="button">
                    <div class="btngroup">
                        <input type="submit" class="btn submit"
                            value="{{ runReportText }}">
                    </div>
                </div>

            </form>

            <hr>

        </div>

    {% endif %}

    <div class="tableview sproutreports">
        {% if values is defined and values is iterable and values|length %}
            <div class="tablecontent">
                <table id="sprout-results" class="data fullwidth nowrap" style="opacity:0;">
                    <thead>
                    <tr>
                        {% for label in labels %}
                            <th>
                                <div {% if loop.index == "1" %}class="first"{% endif %}>
                                    <h3>{{ label }}</h3></div>
                            </th>
                        {% endfor %}
                    </tr>
                    </thead>
                    <tbody>
                    {% for value in values %}
                        <tr>
                            {% for property in value %}
                                <td>
                                    {%- if report.allowHtml -%}
                                        {{- property|raw|nl2br -}}
                                    {%- else -%}
                                        {{- property -}}
                                    {%- endif -%}
                                </td>
                            {% endfor %}
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>

        {% else %}

            {% set boxBody %}
                <p>{{ "This {labelTextSingular} currently has no results. Check your {labelTextSingular} settings and ensure you have content for the {labelTextSingular} you are trying to run. To quickly edit the {labelTextSingular} settings, click on the gear icon in the upper right."|t('sprout-base-reports', {
                        labelTextSingular: labelTextSingular|lower
                    })|raw }}</p>
            {% endset %}

            {{ sprout.mediaBox({
                heading: "No results found"|t('sprout-base-reports'),
                body: boxBody,
                resourcePath: '@sproutbasereports/web/assets/base/dist/images/icon.svg'
            }) }}

        {% endif %}
    </div>

{% endblock %}

{% do view.registerAssetBundle("barrelstrength\\sproutbase\\web\\assets\\cp\\CpAsset") %}
{% do view.registerAssetBundle("barrelstrength\\sproutbasereports\\web\\assets\\base\\SproutReportsAsset") %}
{% do view.registerAssetBundle("barrelstrength\\sproutbasereports\\web\\assets\\datatables\\DataTablesAsset") %}

{% js %}

    (function(){

    $('#btn-download-csv').on('click', function(event) {
    event.preventDefault();
    $form = $(this).parents('form');
    $form.submit();
    });

    $('#modify-settings-icon').on('click', function() {
    $('#modify-settings-panel').slideToggle('slow');
    });

    SproutReport.init();

    SproutReportDataTables.init({
    allowHtml: {{ report.allowHtml ? 'true' : 'false' }},
    defaultPageLength: {{ settings.defaultPageLength ?? '10' }}
    });

    })();

{% endjs %}
